@model CST.Prdn.ViewModels.PrdnRunLookupModel

<span class="in-line">
    @Html.TextBoxFor(m => m.LookupTerm)
    <span id="TypeTermDisp"></span>
    <button id="create-run-button" class="t-button t-button-icontext" type="button"><span class="t-icon t-add"></span>Create New Run</button>

    @Html.HiddenFor(m => m.PrdnOrdTerm)
    @Html.HiddenFor(m => m.PrdnTypeTerm)
    @Html.HiddenFor(m => m.LookupPrdnOrdNo)
    @Html.HiddenFor(m => m.LookupShipDt)
    @Html.HiddenFor(m => m.LookupRunID)
    @Html.HiddenFor(m => m.LookupTypeCD)
    @Html.HiddenFor(m => m.LookupTypeDescr)
</span>

@{Html.Telerik().ScriptRegistrar()
.OnDocumentReady(@<text>

    $('#create-run-button').hide();

    $('#create-run-button').click(function(e) {
        e.preventDefault();
        if ($.isFunction(createNewRunFunc)) { 
            var poNo = $("#@Html.IdFor(m => m.LookupPrdnOrdNo)").val();
            var typCd = $("#@Html.IdFor(m => m.PrdnTypeTerm)").val();
            createNewRunFunc(poNo, typCd);
        }
    });

    function runPicked(event, ui) {

        var poNoInput = $("#@Html.IdFor(m => m.LookupPrdnOrdNo)");
        var shipDtInput = $("#@Html.IdFor(m => m.LookupShipDt)");
        var runIDInput = $("#@Html.IdFor(m => m.LookupRunID)");
        var typCdInput = $("#@Html.IdFor(m => m.LookupTypeCD)");
        var typDescrInput = $("#@Html.IdFor(m => m.LookupTypeDescr)");

        var oldPoNo = poNoInput.val();
        var oldShipDt = shipDtInput.val();
        var oldRunID = runIDInput.val();
        var oldTypCd = typCdInput.val();
        var oldTypDescr = typDescrInput.val();

        if (ui.item) {
            poNoInput.val(ui.item.poNo);
            shipDtInput.val(ui.item.shipDt);
            runIDInput.val(ui.item.runID);
            typCdInput.val(ui.item.typeCD);
            typDescrInput.val(ui.item.typeDescr);
            
            if ( ((ui.item.runID == null) || (ui.item.runID == "")) && (typeof createNewRunFunc == 'function') )  
            { 
                $('#create-run-button').show();
            }

            var newPoNo = poNoInput.val();
            var newRunID = runIDInput.val();

            if ((newRunID) && (newRunID !== "")) {
                if ((newRunID !== oldRunID) && (typeof runChangedFunc == 'function')) {
                    runChangedFunc(oldRunID, ui.item);
                }
            } 
            else
            if ((newPoNo) && (newPoNo !== "")) {
                if (typeof createNewRunFunc == 'function') { 
                    createNewRunFunc(newPoNo, shipDtInput.val(), $("#@Html.IdFor(m => m.PrdnTypeTerm)").val());
                }
                $("#@Html.IdFor(m => m.LookupTerm)").val();
            }

        } else {
            poNoInput.val('');
            shipDtInput.val('');
            runIDInput.val('');
            typCdInput.val('');
            typDescrInput.val('');
            $('#create-run-button').hide();
            alert( "Sorry - " + $("#@Html.IdFor(m => m.PrdnOrdTerm)").val() + ' is not a valid Production Order');
        }
    };

    $("#@Html.IdFor(m => m.LookupTerm)").autocomplete({
        source: function (request, response) {
            var trimTerm = $.trim(request.term);
            var poTerm = $.trim(trimTerm.substr(0,4));
            var typeTerm = $.trim(trimTerm.substr(4,trimTerm.length));
            $("#@Html.IdFor(m => m.PrdnOrdTerm)").val(poTerm);
            $("#@Html.IdFor(m => m.PrdnTypeTerm)").val(typeTerm);
            $("#TypeTermDisp").text(typeTerm);


            var canCreateRuns;
            canCreateRuns = (typeof createNewRunFunc == 'function');

            var prodTypeCD;
            if (typeof getProdTypeFunc == 'function') { 
                prodTypeCD = getProdTypeFunc();
            }

            $.ajax({
                url: '@Url.Action("_PrdnRunLookup", "Lookup")',
                dataType: "json",
                data: { poTerm: poTerm, typeTerm: typeTerm, prodTypeCD: prodTypeCD, includePrdnOrNos: canCreateRuns },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { 
                            label: item.LookupLabel 
                            ,value: item.LookupValue 
                            ,poNo: item.PrdnOrdNo
                            ,shipDt: item.PrdnShipDt
                            ,runID: item.PrdnRunID
                            ,typeCD: item.PrdnTypeCD
                            ,typeDescr: item.PrdnTypeDescr
                        }
                    }));
                }
            });
        }
        , autoFocus: true
        , minLength: 3
        , select: function (event, ui) {
            runPicked(event, ui);
        }
        //, change: function (event, ui) { runPicked(event, ui); }
    });


</text>);}
