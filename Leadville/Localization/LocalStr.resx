<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AccountInformation" xml:space="preserve">
    <value>Account Information</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Lead Ville</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log Off</value>
  </data>
  <data name="LogOn" xml:space="preserve">
    <value>Log On</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me?</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="CurrentLanguage" xml:space="preserve">
    <value>Current Language</value>
  </data>
  <data name="RequiredError" xml:space="preserve">
    <value>The {0} field is required.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Changed" xml:space="preserve">
    <value>Changed</value>
  </data>
  <data name="CompareError" xml:space="preserve">
    <value>'{0}' and '{1}' do not match.</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PassChangeSuccess" xml:space="preserve">
    <value>Your password has been successfully changed.</value>
  </data>
  <data name="PasswordPolicy" xml:space="preserve">
    <value>Password policy</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="failed" xml:space="preserve">
    <value>failed</value>
  </data>
  <data name="MaximumLength" xml:space="preserve">
    <value>Maximum Length</value>
  </data>
  <data name="MinimumLength" xml:space="preserve">
    <value>Minimum Length</value>
  </data>
  <data name="NumberofDigits" xml:space="preserve">
    <value># of Digits</value>
  </data>
  <data name="NumberofLowercase" xml:space="preserve">
    <value># of Lowercase</value>
  </data>
  <data name="NumberofSpecialCharacters" xml:space="preserve">
    <value># of Special Characters</value>
  </data>
  <data name="NumberofUppercase" xml:space="preserve">
    <value># of Uppercase</value>
  </data>
  <data name="or" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="ResetPasswordMessage" xml:space="preserve">
    <value>You must reset your current password. Please enter a new password.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="valid" xml:space="preserve">
    <value>valid</value>
  </data>
  <data name="ValidSpecialCharacters" xml:space="preserve">
    <value>Valid Special Characters</value>
  </data>
  <data name="verbIs" xml:space="preserve">
    <value>is</value>
  </data>
  <data name="verbIsNot" xml:space="preserve">
    <value>is not</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="Make" xml:space="preserve">
    <value>Assemble</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderNo" xml:space="preserve">
    <value>Order #</value>
  </data>
  <data name="Production" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="ProductionOrder" xml:space="preserve">
    <value>Production Order</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="Lookup" xml:space="preserve">
    <value>Lookup</value>
  </data>
  <data name="RunCount" xml:space="preserve">
    <value># Of Runs</value>
  </data>
  <data name="ShipDate" xml:space="preserve">
    <value>Ship Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="RunCode" xml:space="preserve">
    <value>Run Code</value>
  </data>
  <data name="RunID" xml:space="preserve">
    <value>Run ID</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeCode" xml:space="preserve">
    <value>Type Code</value>
  </data>
  <data name="Calendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="Define" xml:space="preserve">
    <value>Define</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="ProductionCalendar" xml:space="preserve">
    <value>Production Calendar</value>
  </data>
  <data name="ShippingDay" xml:space="preserve">
    <value>Ship Day</value>
  </data>
  <data name="HasJobs" xml:space="preserve">
    <value>Has Jobs</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="ProductType" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="ProductTypeCode" xml:space="preserve">
    <value>Product Type Code</value>
  </data>
  <data name="ProductionType" xml:space="preserve">
    <value>Production Type</value>
  </data>
  <data name="ProductionTypeCode" xml:space="preserve">
    <value>Production Type Code</value>
  </data>
  <data name="JobsPageSize" xml:space="preserve">
    <value>Jobs Page Size</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DefaultRun" xml:space="preserve">
    <value>Default Run</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="NewRun" xml:space="preserve">
    <value>New Run</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="CustLocation" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="By" xml:space="preserve">
    <value>By</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="CanceledBy" xml:space="preserve">
    <value>Canceled By</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="SerialNo" xml:space="preserve">
    <value>C#</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="CompletedBy" xml:space="preserve">
    <value>Completed By</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CustID" xml:space="preserve">
    <value>Cust ID</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Decor" xml:space="preserve">
    <value>Decor</value>
  </data>
  <data name="Descr" xml:space="preserve">
    <value>Descr</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="OrderAmount" xml:space="preserve">
    <value>Order Amount</value>
  </data>
  <data name="OrderLine" xml:space="preserve">
    <value>Order Line</value>
  </data>
  <data name="PackingList" xml:space="preserve">
    <value>Packing List</value>
  </data>
  <data name="PackingListNote" xml:space="preserve">
    <value>Packing List Note</value>
  </data>
  <data name="Pattern" xml:space="preserve">
    <value>Pattern</value>
  </data>
  <data name="Postal" xml:space="preserve">
    <value>Postal</value>
  </data>
  <data name="Prio" xml:space="preserve">
    <value>Prio</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="ProductDefinition" xml:space="preserve">
    <value>Product Definition</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="RequestID" xml:space="preserve">
    <value>Request ID</value>
  </data>
  <data name="Row" xml:space="preserve">
    <value>Row</value>
  </data>
  <data name="RowDeduction" xml:space="preserve">
    <value>Row Deduct</value>
  </data>
  <data name="Scheduled" xml:space="preserve">
    <value>Scheduled</value>
  </data>
  <data name="ScheduledBy" xml:space="preserve">
    <value>Scheduled By</value>
  </data>
  <data name="SeqNo" xml:space="preserve">
    <value>Seq#</value>
  </data>
  <data name="Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="Shipped" xml:space="preserve">
    <value>Shipped</value>
  </data>
  <data name="ShippedBy" xml:space="preserve">
    <value>Shipped By</value>
  </data>
  <data name="ShipToCust" xml:space="preserve">
    <value>Ship Cust</value>
  </data>
  <data name="ShipToCustID" xml:space="preserve">
    <value>Ship To ID</value>
  </data>
  <data name="ShipToCustName" xml:space="preserve">
    <value>Ship To Name</value>
  </data>
  <data name="ShipTypeCD" xml:space="preserve">
    <value>Ship Via</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusDate" xml:space="preserve">
    <value>Status Dt</value>
  </data>
  <data name="Worksheet" xml:space="preserve">
    <value>Worksheet</value>
  </data>
  <data name="WorksheetDefinition" xml:space="preserve">
    <value>Worksheet Definition</value>
  </data>
  <data name="WorksheetID" xml:space="preserve">
    <value>WorksheetID</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address1</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address2</value>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>Address3</value>
  </data>
  <data name="Address4" xml:space="preserve">
    <value>Address4</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="DropShip" xml:space="preserve">
    <value>Drop Ship</value>
  </data>
  <data name="EditWorksheet" xml:space="preserve">
    <value>Edit Worksheet</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="and" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="to" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Attachment" xml:space="preserve">
    <value>Attachment</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>For</value>
  </data>
  <data name="AttachAFile" xml:space="preserve">
    <value>Attach a File</value>
  </data>
  <data name="Sorry" xml:space="preserve">
    <value>Sorry</value>
  </data>
  <data name="ProductCD" xml:space="preserve">
    <value>Part#</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Thru" xml:space="preserve">
    <value>Thru</value>
  </data>
  <data name="JobID" xml:space="preserve">
    <value>Job ID</value>
  </data>
  <data name="ShipTo" xml:space="preserve">
    <value>Ship To</value>
  </data>
  <data name="PONo" xml:space="preserve">
    <value>PO#</value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Ship" xml:space="preserve">
    <value>Ship</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Processed" xml:space="preserve">
    <value>Processed</value>
  </data>
  <data name="ProcessedBy" xml:space="preserve">
    <value>Processed By</value>
  </data>
  <data name="ScheduleNote" xml:space="preserve">
    <value>Scheduling Note</value>
  </data>
  <data name="Changes" xml:space="preserve">
    <value>Changes</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="alreadyExistsInInventory" xml:space="preserve">
    <value>already exists in inventory</value>
  </data>
  <data name="InventoryItem" xml:space="preserve">
    <value>Inventory Item</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Can" xml:space="preserve">
    <value>Can</value>
  </data>
  <data name="Cannot" xml:space="preserve">
    <value>Cannot</value>
  </data>
  <data name="Printer" xml:space="preserve">
    <value>Printer</value>
  </data>
  <data name="ScanPrinter" xml:space="preserve">
    <value>Scanning Printer</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="InvItem" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="InvItemDefinition" xml:space="preserve">
    <value>Item Definition</value>
  </data>
  <data name="InvItemID" xml:space="preserve">
    <value>Item ID</value>
  </data>
  <data name="Scanned" xml:space="preserve">
    <value>Scanned</value>
  </data>
  <data name="ScannedSerialNo" xml:space="preserve">
    <value>Scanned C#</value>
  </data>
  <data name="but" xml:space="preserve">
    <value>but</value>
  </data>
  <data name="not" xml:space="preserve">
    <value>not</value>
  </data>
  <data name="Printed" xml:space="preserve">
    <value>Printed</value>
  </data>
  <data name="Assigned" xml:space="preserve">
    <value>Assigned</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="LabelPrinter" xml:space="preserve">
    <value>Label Printer</value>
  </data>
  <data name="PurchaseOrder" xml:space="preserve">
    <value>Purchase Order</value>
  </data>
  <data name="EditItem" xml:space="preserve">
    <value>Edit Item</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>Definition</value>
  </data>
  <data name="Option" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="doesNotMatch" xml:space="preserve">
    <value>does not match</value>
  </data>
  <data name="another" xml:space="preserve">
    <value>another</value>
  </data>
  <data name="isAlreadyAssignedTo" xml:space="preserve">
    <value>is already assigned to</value>
  </data>
</root>